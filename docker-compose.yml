version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: expense_tracker_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-expense_tracker_root_2025}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-expense_tracker}
      MYSQL_USER: ${MYSQL_USER:-expense_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-expense_pass_2025}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db/schema_and_seed.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    networks:
      - expense_tracker_network
    command: >
      --default-authentication-plugin=mysql_native_password
      --bind-address=0.0.0.0
      --max_connections=1000
      --innodb_buffer_pool_size=256M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # FastAPI Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: expense_tracker_backend
    restart: unless-stopped
    environment:
      DATABASE_URL: mysql+pymysql://${MYSQL_USER:-expense_user}:${MYSQL_PASSWORD:-expense_pass_2025}@mysql:3306/${MYSQL_DATABASE:-expense_tracker}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-super-secure-jwt-secret-key-change-in-production-12345678901234567890}
      JWT_ALGORITHM: HS256
      JWT_ACCESS_TOKEN_EXPIRE_MINUTES: 30
      JWT_REFRESH_TOKEN_EXPIRE_DAYS: 7
      APP_NAME: "Expense Tracker API"
      APP_VERSION: "1.0.0"
      DEBUG: "false"
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - expense_tracker_network
    volumes:
      - ./backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Adminer for database management
  adminer:
    image: adminer:4.8.1
    container_name: expense_tracker_adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
      ADMINER_DESIGN: pepa-linha
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - expense_tracker_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:1.25-alpine
    container_name: expense_tracker_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - backend
    networks:
      - expense_tracker_network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot:latest
    container_name: expense_tracker_certbot
    restart: "no"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  mysql_data:
    driver: local

networks:
  expense_tracker_network:
    driver: bridge
